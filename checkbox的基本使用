#关于checkbox控件的使用

##xml文件的配置

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".MainActivity" >

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="this is checkbox" />
    
    <CheckBox 
        android:id="@+id/checkbox01"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="手机"
        />
    
    <CheckBox 
        android:id="@+id/checkbox02"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="电脑"
        />
    <CheckBox 
        android:id="@+id/checkbox03"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="推广"
        />

</LinearLayout>


###########################################################################
##其实在android中自带了一个用于监听checkbox的监听器类


#父类与子类之间能相互转型
##核心代码


##先创建一个原理相同的checkbox监听器类
##自定义一个监听器内部类，用于监听用户点击
class onCheckchangelistener implements OnClickListener{

    
		@Override
		##传入的view参数可以获取checkbox，是因为view是checkbox的父类，编译器执行代码时会自动将checkbox向上转型为view类型
    public void onClick(View view) {
			// TODO Auto-generated method stub
			System.out.println("is clicked");
			
      #将view类型对象向下转型为chekbox,checkbox是view的子类
			CheckBox box = (CheckBox)view;
			
			int i = view.getId();
      #获取checkbox的状态方法，也可以用if语句
			switch(i){
				case R.id.checkbox01:
        #checkbox自带方法，判断状态是否为选中状态
					if(box.isChecked()){
						System.out.println("you check shouji");
					}
					else{
						System.out.println("you cancel check shouji");
					}
					break;
					
				case R.id.checkbox02:
					if(box.isChecked()){
						System.out.println("you check dinnao");
					}
					else{
						System.out.println("you cancel check diannao");
					}
					break;
				
				case R.id.checkbox03:
					if(box.isChecked()){
						System.out.println("you check tuiguang");
					}
					else{
						System.out.println("you cancel check tuiguang");
					}
					break;
					
				default:
					System.out.println("...");
					break;
			}
		}
    }

####————————————————————————————————————————————————————————————————————————————————————————————————####
##android自带的checkboxclicklistener类
#其原理与上面自定义的监听类相同，只是android已经帮我们封装好了，直接用就行

class onCblistener implements OnCheckedChangeListener{

		@Override
		public void onCheckedChanged(CompoundButton buttonView, boolean isCheck) {
			// TODO Auto-generated method stub
			int i = buttonView.getId();
			switch(i){
			case R.id.checkbox01:
				if(isCheck){
					System.out.println("you check shouji");
				}
				else{
					System.out.println("you cancel check shouji");
				}
				break;
				
			case R.id.checkbox02:
				if(isCheck){
					System.out.println("you check dinnao");
				}
				else{
					System.out.println("you cancel check diannao");
				}
				break;
			
			case R.id.checkbox03:
				if(isCheck){
					System.out.println("you check tuiguang");
				}
				else{
					System.out.println("you cancel check tuiguang");
				}
				break;
				
			default:
				System.out.println("...");
				break;
		}
		##新添加控件全选按钮qx，实现全选功能
		if(isCheck){
				sj.setChecked(true);
				dn.setChecked(true);
				tg.setChecked(true);
				qx.setChecked(true);
			}else{
				sj.setChecked(false);
				dn.setChecked(false);
				tg.setChecked(false);
				qx.setChecked(false);
			}
		}
    	
    }

#########
##全选按钮还有一个更加简单的实现方法
#单独写一个监听器
##
// 全选按钮实现监听类
    class AllClickListener implements OnCheckedChangeListener{

		@Override
		public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
			// TODO Auto-generated method stub
			sj.setChecked(isChecked);
			dn.setChecked(isChecked);
			tg.setChecked(isChecked);
			qx.setChecked(isChecked);
		}
    	
    }
##实例化监听对象，为全选按钮设置监听器
//全选按钮
        AllClickListener allcheck = new AllClickListener();
        qx.setOnCheckedChangeListener(allcheck);
